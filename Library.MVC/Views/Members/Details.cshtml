@model Library.MVC.Models.Members.DetailsMemberViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Member Details</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SSN)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SSN)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        </dl>
</div>


<h4>Loans</h4>
<table class="table">
    <thead>
        <tr>
            <th>Copy Id</th>
            <th>Title</th>
            <th>Author</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Loans)
        {
            @if (item.BookCopy.LoanStart != null)
            {
                if (item.LoanReturned == null)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.BookCopy.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BookCopy.Details.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BookCopy.Details.Author.Name)
                        </td>
                        <td>
                            <a asp-action="ReturnCopy" asp-route-loanid="@item.Id" asp-route-id="@item.BookCopy.Id">Return book</a>
                        </td>
                    </tr>
                }
            }
        }
    </tbody>
</table>

<div>
    <a asp-route-id="@Model.Id" asp-action="CreateLoan">Create new loan</a> |
    <a asp-action="Index">Back to List</a>
</div>
